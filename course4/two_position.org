#+TITLE: Position sur deux échantillons
#+AUTHOR: Ahmadou H. DICKO
#+DATE: Février 2014
#+startup: beamer
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [xetex, bigger]
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+LATEX_HEADER: \definecolor{newgray}{rgb}{0.95, 0.95, 0.95}
#+LATEX_HEADER: \newminted{r}{fontsize=\small, bgcolor=newgray}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small, label=R output, frame=lines, labelposition=topline}
#+LATEX_HEADER: \setmainfont[Mapping=tex-text,Ligatures=Common]{Minion Pro}
#+LATEX_HEADER: \setsansfont[Mapping=tex-text,Ligatures=Common]{Myriad Pro}
#+LATEX_HEADER: \setmathfont[Scale=MatchLowercase]{Minion Pro}
#+LATEX_HEADER: \setmonofont[Scale=0.75]{Source Code Pro}
#+LATEX_HEADER: \institute[ENSAE]{ENSAE}
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+BEAMER_THEME: Boadilla
#+BEAMER_COLOR_THEME: orchid
#+BEAMER_HEADER: \setbeamertemplate{navigation symbols}{}
#+PROPERTY: session *R*
#+PROPERTY: cache yes 
#+PROPERTY: exports both
#+PROPERTY: tangle yes
#+PROPERTY: results output graphics
#+OPTIONS: toc:nil H:2

#+LATEX:\selectlanguage{frenchb}
#+LATEX:\begin{frame}[t]{Plan}
#+LATEX:\tableofcontents
#+LATEX:\end{frame}

* Introduction
#+begin_src R :exports none :results silent :session
  library(Cairo)
  library(plyr)
  mainfont <- "Minion Pro"
  CairoFonts(regular = paste(mainfont, "style=Regular", sep=":"),
             bold = paste(mainfont, "style=Bold", sep=":"),
             italic = paste(mainfont, "style=Italic", sep=":"),
             bolditalic = paste(mainfont, "style=Bold Italic,BoldItalic", sep=":"))
  pdf <- CairoPDF
  options(prompt = "> ")
#+end_src
  
** Introduction							    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :END:
- Lorsque l'on dispose d'un échantillon qui décrit un phénomène donné, il est 
  important de s'intérroger sur le caractère aléatoire des observations.
- Lors de l'étude de série temporelle, une question cruciale est de savoir si les données
  suivent une tendance précise.
- On peut dès lors de procéder à un test /d'échantillon aléatoire/ afin de savoir
  si les fluctuations de l'échantillon sont aléatoires ou déterminées ?
- Deux tests d'hypothèse seront présentés afin de répondre à ces questions :
  - le test de coéfficient du corrélation de rang de Spearman
  - le test de coéfficient du corrélation de rang de Kendall

* Test de Wilcoxon
#+LATEX:\begin{frame}{Plan}
#+LATEX:\tableofcontents[currentsection]
#+LATEX:\end{frame}
** Test de Wilcoxon : résolution 		    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :END:

\[
W = \sum_{i = 1}^m R_i
\]

** Test de Wilcoxon : résolution 		    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :END:
Les hypothèses sont les suivantes :
- $H_0$ : les v.a $X_i$ sont indépendantes et de même loi $F$
contre
- $H_1$ : les v.a $X_i$ ont une dépendance quelconque

- On peut utiliser des alternatives plus précise :
  - dépendance croissante
  - dépendance décroissante
- Les statistiques de tests seront basés sur les statisques de rang

** Test de Wilcoxon : résolution 		    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :END:
La région de rejet $W$ est du type définie par :
- ${r_s > c}$ : dépendance positive
- ${r_s < c}$ : dépendance négative
- ${|r_s| > c}$ : dépendance quelconque

De plus sous $H_0$, la distribution de $r_s$ est symétrique et
On peut montrer que (exercice)
\[
\mathbb{V}(r_s) = \frac{1}{n - 1}
\]

** Test de Wilcoxon : résolution 		    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:
Sous $H_0$ : 
- Pour $n$ grand ($n \longrightarrow +\infty$) : 
\[
r_s \sqrt{n - 1} \longrightarrow \mathcal{N}(0, 1)
\]

- Pour $11 \leq n \leq 30$ : 

\[
r_s \sqrt{\frac{n - 2}{1 - r^2}} \simeq T_{n - 2}
\]

- Pour $n \leq 10$ :
  La loi exacte de $r_s$ à été tabulée en se basant sur la statistique
\[
S = \sum_{i = 1}^n (R_i - i)
\]
     
** Test de Wilcoxon : résolution 		    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:
- Pour $n$ grand on a :
\[
Z = r_s \sqrt{n - 1}
\]

alors
\[
\alpha = P(Z \geq z_{\alpha} | H_0)
\]

avec $z_{\alpha}$ le fractile d'ordre $1 - \alpha$ de $\mathcal{N}(0, 1)$

- Pour $n$ entre $11$ et $30$, on peut utiliser la statistique suivante
\[
T = r_s \sqrt{\frac{n - 2}{1 - r^2}}
\]
alors
\[
\alpha = P(T \geq t_{\alpha} | H_0)
\]
avec $t_{\alpha}$ le fractile d'ordre $1 - \alpha$ de $T_{n-2}$


- Pour $n \leq  10$, on utilise la loi tabulée de $W_n+$ 

** Test de Wilcoxon : exemple 					    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:

*** 								   :B_column:
    :PROPERTIES:
    :BEAMER_col: 0.4   
    :BEAMER_env: block
    :END:
#+begin_src R :exports results 
  X <- c(980, 1305, 906, 1140, 1130, 1080, 1090, 1270, 1250, 1100)
  Y <- c(900, 1245, 910, 1220, 1010, 990, 1030, 1170, 1200, 1060)
  df <- data.frame(X, Y)
  df
#+end_src

*** 								   :B_column:
    :PROPERTIES:
    :BEAMER_env: column
    :BEAMER_col: 0.6
    :END:
#+begin_src R :exports results :results graphics :file ../figures/course4-spear-1.pdf :height 7 
  boxplot(X, Y, xaxt = "n")
  axis(1, at = c(1, 2), labels = c("X", "Y"))
  
#+end_src

** Test de Wilcoxon : exemple 			    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:


#+begin_src R :exports code
  n <- length(X)
  m <- length(Y)
  R_x <- rank(c(X, Y), ties.method = "average")[1:n]  
  R_y <- rank(c(X, Y), ties.method = "average")[(n + 1):(m + n)]  
#+end_src


#+begin_src R :exports results
  n <- length(X)
  m <- length(Y)
  R_x <- rank(c(X, Y), ties.method = "average")[1:n]  
  R_y <- rank(c(X, Y), ties.method = "average")[(n + 1):(m + n)]
  df <- mutate(df, R_x = R_x, R_y = R_y)
  mat <- t(df)
  colnames(mat) <- seq(nrow(df))
  mat
#+end_src

** Test de Wilcoxon : exemple 			    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:

#+begin_src R :exports both
  p <- 0.05
  W <- sum(R_x)
  N <- m + n
  E_W <- m * (N + 1) / 2
  V_W <- (m * n * (m + n + 1)) / 12
  U <- (W - E_W - 0.5) / sqrt(V_W)
  z_theo <- qnorm(p = 1 - p/2)
  c(W = W, U = U, z_theo = z_theo)
#+end_src

** Test de Wilcoxon : exemple 					    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:

#+begin_src R :exports both
  abs(U) > z_theo
#+end_src

On ne peut rejetter l'hypothèse nulle de dépendance quelconque entre $X$ et $Y$ au seuil de 5%.

** Test de Wilcoxon : exemple 			    :B_frame:
   :PROPERTIES:
   :BEAMER_env: frame
   :BEAMER_OPT: t
   :END:


#+begin_src R :exports both
  wilcox.test(X, Y)  ## W - (m * (m + 1)) / 2  
#+end_src



   
